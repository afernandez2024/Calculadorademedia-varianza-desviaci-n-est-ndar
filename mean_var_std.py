# -*- coding: utf-8 -*-
"""mean_var_std.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UezxlaL5tzYx9HGfKTQ22bVYMgXM028l
"""

import numpy as np
def calculate(ariel):
    if len(ariel) != 9:
        raise ValueError("List must contain nine numbers.")

    matrix = np.array(ariel).reshape(3, 3)

    calculations = {
        'mean': [np.mean(matrix, axis=0).tolist(), np.mean(matrix, axis=1).tolist(), np.mean(matrix).tolist()],
        'variance': [np.var(matrix, axis=0).tolist(), np.var(matrix, axis=1).tolist(), np.var(matrix).tolist()],
        'standard deviation': [np.std(matrix, axis=0).tolist(), np.std(matrix, axis=1).tolist(), np.std(matrix).tolist()],
        'max': [np.max(matrix, axis=0).tolist(), np.max(matrix, axis=1).tolist(), np.max(matrix).tolist()],
        'min': [np.min(matrix, axis=0).tolist(), np.min(matrix, axis=1).tolist(), np.min(matrix).tolist()],
        'sum': [np.sum(matrix, axis=0).tolist(), np.sum(matrix, axis=1).tolist(), np.sum(matrix).tolist()]
    }

    return calculations

def print_ordered_results(result):
    for key, value in result.items():
        print(f"{key.capitalize()}:")
        print(f"  Filas: {value[1]}")
        print(f"  Columnas: {value[0]}")
        print(f"  Matriz completa: {value[2]}\n")

result = calculate([0, 1, 2, 3, 4, 5, 6, 7, 8])
print_ordered_results(result)